tosca_definitions_version: cloudify_dsl_1_4
description: ''
imports:
  - cloudify/types/types.yaml
  - plugin:cloudify-terraform-plugin
inputs:
  access_tier:
    type: string
    required: true
  account_kind:
    type: string
    default: "StorageV2"
    required: false
  account_replication_type:
    type: string
    default: "LRS"
    required: false
  account_tier:
    type: string
    required: true
  active_directory:
    type: list
    default: []
    required: false
  allow_nested_items_to_be_public:
    type: boolean
    default: true
    required: false
  azure_files_authentication:
    type: list
    default: []
    required: false
  blob_properties:
    type: list
    default: []
    required: false
  bypass:
    type: list
    default: ["AzureServices"]
    required: false
  container_delete_retention_policy:
    type: list
    default: []
    required: false
  cors_rule:
    type: list
    default: []
    required: false
  cors_rule_blob:
    type: list
    default: []
    required: false
  cors_rule_queue:
    type: list
    default: []
    required: false
  create_private-endpoint:
    type: boolean
    default: false
    required: false
  create_resource_group:
    type: boolean
    default: false
    required: false
  cross_tenant_replication_enabled:
    type: boolean
    default: false
    required: false
  custom_domain:
    type: list
    default: []
    required: false
  custom_network_interface_name:
    type: string
    default: null
    required: false
  customer_managed_key:
    type: list
    default: []
    required: false
  default_to_oauth_authentication:
    type: boolean
    default: false
    required: false
  delete_retention_policy:
    type: list
    default: []
    required: false
  edge_zone:
    type: string
    default: null
    required: false
  enable_advanced_threat_protection:
    type: boolean
    default: true
    required: false
  enable_blob_properties:
    type: boolean
    default: false
    required: false
  enable_https_traffic_only:
    type: boolean
    default: true
    required: false
  enable_routing:
    type: boolean
    default: true
    required: false
  enable_share_properties:
    type: boolean
    default: false
    required: false
  enable_static_website:
    type: boolean
    default: false
    required: false
  encryption_scopes:
    type: dict
    required: true
  hour_metrics:
    type: list
    default: []
    required: false
  identity:
    type: list
    default: []
    required: false
  infrastructure_encryption_enabled:
    type: boolean
    default: false
    required: false
  ip_configuration:
    type: list
    default: []
    required: false
  ip_rules:
    type: list
    default: null
    required: false
  is_hns_enabled:
    type: boolean
    default: false
    required: false
  is_manual_connection:
    type: boolean
    default: false
    required: false
  large_file_share_enabled:
    type: boolean
    default: false
    required: false
  length:
    type: string
    required: true
  location:
    type: string
    required: true
  logging:
    type: list
    default: []
    required: false
  managed_identity_type:
    type: string
    default: null
    required: false
  min_tls_version:
    type: string
    default: "TLS1_2"
    required: false
  minute_metrics:
    type: list
    default: []
    required: false
  name:
    type: string
    required: true
  network_rule_default_action:
    type: string
    default: "Deny"
    required: false
  network_rules_enabled:
    type: boolean
    default: true
    required: false
  nfsv3_enabled:
    type: boolean
    default: false
    required: false
  private_connection_resource_alias:
    type: string
    default: null
    required: false
  private_dns_zone_group:
    type: list
    default: []
    required: false
  private_endpoint_name:
    type: string
    default: null
    required: false
  private_link_access:
    type: list
    default: []
    required: false
  private_service_connection_name:
    type: string
    default: null
    required: false
  public_network_access_enabled:
    type: boolean
    default: true
    required: false
  queue_encryption_key_type:
    type: string
    default: "Service"
    required: false
  queue_properties:
    type: list
    default: []
    required: false
  request_message:
    type: string
    default: null
    required: false
  resource_group_name:
    type: string
    required: true
  retention_policy:
    type: list
    default: []
    required: false
  routing:
    type: list
    default: []
    required: false
  shared_access_key_enabled:
    type: boolean
    default: true
    required: false
  smb:
    type: list
    default: []
    required: false
  special:
    type: boolean
    required: true
  static_website:
    type: list
    default: []
    required: false
  subnet_id:
    type: string
    default: null
    required: false
  subnet_ids:
    type: list
    default: null
    required: false
  subresource_names:
    type: list
    default: [""]
    required: false
  table_encryption_key_type:
    type: string
    default: "Service"
    required: false
  tags:
    type: dict
    default:
        project: "cil"
        testing: "webapp"
    required: false
  upper:
    type: boolean
    required: true
node_templates:
  terraform:
    type: cloudify.nodes.terraform
    properties:
      resource_config:
        installation_source: https://releases.hashicorp.com/terraform/1.2.0/terraform_1.2.0_linux_amd64.zip
  cloud_resources:
    type: cloudify.nodes.terraform.Module
    properties:
      resource_config:
        source:
          location: https://github.com/ey-org/cil2-0-cloudify/archive/refs/heads/feature/mitali.zip
          username: { get_secret: Storage.username }
          password: { get_secret: Storage.password }
        source_path: projects/storage-account/storage-account-blob
        variables:
          access_tier: { get_input: access_tier }
          account_kind: { get_input: account_kind }
          account_replication_type: { get_input: account_replication_type }
          account_tier: { get_input: account_tier }
          active_directory: { get_input: active_directory }
          allow_nested_items_to_be_public: { get_input: allow_nested_items_to_be_public }
          azure_files_authentication: { get_input: azure_files_authentication }
          blob_properties: { get_input: blob_properties }
          bypass: { get_input: bypass }
          container_delete_retention_policy: { get_input: container_delete_retention_policy }
          cors_rule: { get_input: cors_rule }
          cors_rule_blob: { get_input: cors_rule_blob }
          cors_rule_queue: { get_input: cors_rule_queue }
          create_private-endpoint: { get_input: create_private-endpoint }
          create_resource_group: { get_input: create_resource_group }
          cross_tenant_replication_enabled: { get_input: cross_tenant_replication_enabled }
          custom_domain: { get_input: custom_domain }
          custom_network_interface_name: { get_input: custom_network_interface_name }
          customer_managed_key: { get_input: customer_managed_key }
          default_to_oauth_authentication: { get_input: default_to_oauth_authentication }
          delete_retention_policy: { get_input: delete_retention_policy }
          edge_zone: { get_input: edge_zone }
          enable_advanced_threat_protection: { get_input: enable_advanced_threat_protection }
          enable_blob_properties: { get_input: enable_blob_properties }
          enable_https_traffic_only: { get_input: enable_https_traffic_only }
          enable_routing: { get_input: enable_routing }
          enable_share_properties: { get_input: enable_share_properties }
          enable_static_website: { get_input: enable_static_website }
          encryption_scopes: { get_input: encryption_scopes }
          hour_metrics: { get_input: hour_metrics }
          identity: { get_input: identity }
          infrastructure_encryption_enabled: { get_input: infrastructure_encryption_enabled }
          ip_configuration: { get_input: ip_configuration }
          ip_rules: { get_input: ip_rules }
          is_hns_enabled: { get_input: is_hns_enabled }
          is_manual_connection: { get_input: is_manual_connection }
          large_file_share_enabled: { get_input: large_file_share_enabled }
          length: { get_input: length }
          location: { get_input: location }
          logging: { get_input: logging }
          managed_identity_type: { get_input: managed_identity_type }
          min_tls_version: { get_input: min_tls_version }
          minute_metrics: { get_input: minute_metrics }
          name: { get_input: name }
          network_rule_default_action: { get_input: network_rule_default_action }
          network_rules_enabled: { get_input: network_rules_enabled }
          nfsv3_enabled: { get_input: nfsv3_enabled }
          private_connection_resource_alias: { get_input: private_connection_resource_alias }
          private_dns_zone_group: { get_input: private_dns_zone_group }
          private_endpoint_name: { get_input: private_endpoint_name }
          private_link_access: { get_input: private_link_access }
          private_service_connection_name: { get_input: private_service_connection_name }
          public_network_access_enabled: { get_input: public_network_access_enabled }
          queue_encryption_key_type: { get_input: queue_encryption_key_type }
          queue_properties: { get_input: queue_properties }
          request_message: { get_input: request_message }
          resource_group_name: { get_input: resource_group_name }
          retention_policy: { get_input: retention_policy }
          routing: { get_input: routing }
          shared_access_key_enabled: { get_input: shared_access_key_enabled }
          smb: { get_input: smb }
          special: { get_input: special }
          static_website: { get_input: static_website }
          subnet_id: { get_input: subnet_id }
          subnet_ids: { get_input: subnet_ids }
          subresource_names: { get_input: subresource_names }
          table_encryption_key_type: { get_input: table_encryption_key_type }
          tags: { get_input: tags }
          upper: { get_input: upper }
    relationships:
      - target: terraform
        type: cloudify.terraform.relationships.run_on_host
