tosca_definitions_version: cloudify_dsl_1_4
description: 'This module provisions the Azure Bastion Host service is a fully platform-managed PaaS service that you provision inside your virtual network. Azure Bastion is a service you deploy that lets you connect to a virtual machine using your browser and the Azure portal, or via the native SSH or RDP client already installed on your local computer. When you connect via Azure Bastion, your virtual machines don''t need a public IP address, agent, or special client software.'
imports:
  - cloudify/types/types.yaml
  - plugin:cloudify-terraform-plugin
inputs:
  allocation_method:
    type: string
    required: true
  copy_paste_enabled:
    type: boolean
    default: true
    required: false
  create_public_ip:
    type: boolean
    default: false
    required: false
  create_resource_group:
    type: boolean
    default: false
    required: false
  create_subnet:
    type: boolean
    default: false
    required: false
  create_virtual_network:
    type: boolean
    default: false
    required: false
  ddos_protection_mode:
    type: string
    default: "Standard"
    required: false
  ddos_protection_plan_id:
    type: string
    default: null
    required: false
  domain_name_label:
    type: string
    default: null
    required: false
  edge_zone:
    type: string
    default: null
    required: false
  file_copy_enabled:
    type: boolean
    default: false
    required: false
  generate_domain_name_label:
    type: boolean
    default: false
    required: false
  idle_timeout_in_minutes:
    type: float
    default: null
    required: false
  ip_connect_enabled:
    type: boolean
    default: false
    required: false
  ip_name:
    type: string
    required: true
  ip_tags:
    type: dict
    default: {}
    required: false
  ip_version:
    type: string
    default: "IPV4"
    required: false
  location:
    type: string
    required: true
  name:
    type: string
    required: true
  pip_sku:
    type: string
    default: "Basic"
    required: false
  pip_sku_tier:
    type: string
    default: "Regional"
    required: false
  public_ip_name:
    type: string
    required: true
  public_ip_prefix_id:
    type: string
    default: null
    required: false
  resource_group_name:
    type: string
    required: true
  reverse_fqdn:
    type: string
    default: null
    required: false
  scale_units:
    type: integer
    default: 2
    required: false
  shareable_link_enabled:
    type: boolean
    default: false
    required: false
  sku:
    type: string
    default: "Basic"
    required: false
  subnets:
    type: dict
    default: {}
    required: false
  tags:
    type: dict
    default:
        project: "cil"
        testing: "webapp"
    required: false
  tunneling_enabled:
    type: boolean
    default: false
    required: false
  vnet:
    type: dict
    default: {}
    required: false
  zones:
    type: list
    default: []
    required: false
node_templates:
  terraform:
    type: cloudify.nodes.terraform
    properties:
      resource_config:
        installation_source: https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip
  cloud_resources:
    type: cloudify.nodes.terraform.Module
    properties:
      resource_config:
        source:
          location: https://github.com/ey-org/cil2-0-cloudify/archive/refs/heads/feature/mitali.zip
          username: { get_secret: Bastion.username }
          password: { get_secret: Bastion.password }
        source_path: projects/bastion-host
        variables:
          allocation_method: { get_input: allocation_method }
          copy_paste_enabled: { get_input: copy_paste_enabled }
          create_public_ip: { get_input: create_public_ip }
          create_resource_group: { get_input: create_resource_group }
          create_subnet: { get_input: create_subnet }
          create_virtual_network: { get_input: create_virtual_network }
          ddos_protection_mode: { get_input: ddos_protection_mode }
          ddos_protection_plan_id: { get_input: ddos_protection_plan_id }
          domain_name_label: { get_input: domain_name_label }
          edge_zone: { get_input: edge_zone }
          file_copy_enabled: { get_input: file_copy_enabled }
          generate_domain_name_label: { get_input: generate_domain_name_label }
          idle_timeout_in_minutes: { get_input: idle_timeout_in_minutes }
          ip_connect_enabled: { get_input: ip_connect_enabled }
          ip_name: { get_input: ip_name }
          ip_tags: { get_input: ip_tags }
          ip_version: { get_input: ip_version }
          location: { get_input: location }
          name: { get_input: name }
          pip_sku: { get_input: pip_sku }
          pip_sku_tier: { get_input: pip_sku_tier }
          public_ip_name: { get_input: public_ip_name }
          public_ip_prefix_id: { get_input: public_ip_prefix_id }
          resource_group_name: { get_input: resource_group_name }
          reverse_fqdn: { get_input: reverse_fqdn }
          scale_units: { get_input: scale_units }
          shareable_link_enabled: { get_input: shareable_link_enabled }
          sku: { get_input: sku }
          subnets: { get_input: subnets }
          tags: { get_input: tags }
          tunneling_enabled: { get_input: tunneling_enabled }
          vnet: { get_input: vnet }
          zones: { get_input: zones }
        environment_variables:
          ARM_SUBSCRIPTION_ID: { get_secret: azure_subscription_id }
          ARM_CLIENT_ID: { get_secret: azure_client_id }
          ARM_TENANT_ID: { get_secret: azure_tenant_id }
          ARM_CLIENT_SECRET: { get_secret: azure_client_secret }
    relationships:
      - target: terraform
        type: cloudify.terraform.relationships.run_on_host
capabilities:
  id:
    value: { get_attribute: [ cloud_resources, outputs, 'id', value ] }
  dns_name:
    value: { get_attribute: [ cloud_resources, outputs, 'dns_name', value ] }