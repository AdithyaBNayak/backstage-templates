apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: ${{values.component_id | dump}}
  {%- if values.description %}
  description: ${{values.description | dump}}
  {%- endif %}

  links:
    - url: https://github.com/${{values.destination.owner + "/" + values.destination.repo}}
      title: ${{values.component_id | dump}}
      icon: code

  labels:
    system: web-apps
  {%- if values.track_id %}
    trackid: ${{values.track_id | dump}}
  {%- endif %}
    environmentname: ${{ values .environment_name }}

  tags:
    - ${{ values.solution_stack_name }}
    - aws
    - "applicationtype-webapplication"

  annotations:
    # add elastic beanstalk annotation
    jenkins.io/github-folder: 'custom-actions/tf-${{ values.component_id }}'
    github.com/project-slug: ${{values.destination.owner + "/" + values.destination.repo}}
    dev.azure.com/project: 'SDAFY24'
    dev.azure.com/build-definition: 'ey-org.devexplatform'
    backstage.io/techdocs-ref: dir:.
    {%- if (values.solution_stack_name =='java')  %}
    backstage.io/linguist: https://github.com/ItRachii/spring-boot-ebs
    sonarqube.org/project-key: 'demo-app/aws-elb-java'
    {%- elif (values.solution_stack_name == 'python') %}
    backstage.io/linguist: https://github.com/ItRachii/ebs-sample-python-application
    sonarqube.org/project-key: 'python-app/aws-elb-python'
    {%- elif (values.solution_stack_name == 'node') %} 
    backstage.io/linguist: https://github.com/ItRachii/ebs-sample-node-application
    sonarqube.org/project-key: 'node-app/aws-elb-node'
    {%- endif %}

spec:
  type: service
  lifecycle: experimental
  system: elasticbeanstalk
  owner: ${{values.owner | dump}}
