apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: gcp-gke-template
  title: GCP GKE Template
  description: Deploying gke cluster
  tags:
    - gcp
    - nodejs
    - webserver
spec:
  owner: group:EY
  type: service
  parameters:
    - title: Provide some simple information(Cluster Basics)
      required:
        - project
        - description
        - container_cluster_name
        - location
        - owner
      properties:
        project:
          title: Name
          type: string
          description: Unique name of the project
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Write the description of the project.
          ui:field: EntityNamePicker
        container_cluster_name:
          title: Cluster-Name
          type: string
          description: Provide some name for your cluster.
        location:
          title: Location
          type: string
          description: Give location for the project to be made in.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
              - User
        track_id:
          title: Track ID
          type: string
          description: GCP gke track ID
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: template
      name: Fetching Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          project_id: ${{ parameters.project }}
          container_cluster_name: ${{ parameters.container_cluster_name }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          location: ${{ parameters.location }}
    - id: publish
      name: Publishing to GitHub
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.project }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: public
        defaultBranch: main

    - id: webhook
      name: Adding webhook to Github Respository
      action: github:webhook
      input: 
        repoUrl: ${{ parameters.repoUrl }}
        # webhookUrl: http://10.1.0.228:8080/github-webhook/
        webhookUrl: http://172.190.72.81:8080/github-webhook/
        events:
        - push
        active: true
        contentType: json 

    - id: jenkinsJob
      name: create jenkins Job
      action: jenkins:job:create
      input:
        component_id: ${{ parameters.project }}
        allowedHosts: ['github.com']
        # description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        folder: "custom-actions"
        job: 'tf-${{ parameters.project }}'
        track_id: ${{ parameters.track_id }}
        
    - id: jenkinsRun
      name: Run Jenkins Job
      action: jenkins:job:run
      input:
        component_id: ${{ parameters.project }}
        allowedHosts: ['github.com']
        # description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        folder: "custom-actions"
        job: 'tf-${{ parameters.project }}'

    - id: register
      name: Registering Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
                  
